versions pytest-5.4.3, py-1.9.0, python-3.8.2.final.0
cwd=/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii
args=('--debug',)

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x7f78089fd5b0>
    pytest_plugin_registered [hook]
        plugin: <Session magnum_opus_ii exitstatus=None testsfailed=0 testscollected=0>
        manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x7f78089fd5b0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x7f780666a820>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x7f780666a9a0>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: faulthandler [assertion]
      pytest_configure [hook]
          config: <_pytest.config.Config object at 0x7f78089fd5b0>
      finish pytest_configure --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.faulthandler.FaultHandlerHooks object at 0x7f780666aa60>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.stepwise.StepwisePlugin object at 0x7f780666ab80>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: pdb [assertion]
    early skip of rewriting module: cmd [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x7f78089fd5b0>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/mark/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/assertion/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.resultlog' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/resultlog.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/stepwise.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/logging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/reports.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/faulthandler.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_pep8' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/pytest_pep8.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_asyncio.plugin' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/pytest_asyncio/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_cov.plugin' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/pytest_cov/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=5 _state='suspended' tmpfile=<_pytest.capture.EncodedFile object at 0x7f7807e5c490>> err=<FDCapture 2 oldfd=6 _state='suspended' tmpfile=<_pytest.capture.EncodedFile object at 0x7f7807e5c2e0>> in_=<FDCapture 0 oldfd=3 _state='started' tmpfile=<_io.TextIOWrapper name='/dev/null' mode='r' encoding='UTF-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'tests.conftest' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/conftest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x7f780666a820>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x7f780666a9a0>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.faulthandler.FaultHandlerHooks object at 0x7f780666aa60>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.stepwise.StepwisePlugin object at 0x7f780666ab80>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x7f780666aee0>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x7f7806694820>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x7f78089fd5b0>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/mark/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/assertion/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.resultlog' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/resultlog.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/stepwise.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/logging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/reports.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/faulthandler.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_pep8' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/pytest_pep8.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_asyncio.plugin' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/pytest_asyncio/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_cov.plugin' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/pytest_cov/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=5 _state='suspended' tmpfile=<_pytest.capture.EncodedFile object at 0x7f7807e5c490>> err=<FDCapture 2 oldfd=6 _state='suspended' tmpfile=<_pytest.capture.EncodedFile object at 0x7f7807e5c2e0>> in_=<FDCapture 0 oldfd=3 _state='started' tmpfile=<_io.TextIOWrapper name='/dev/null' mode='r' encoding='UTF-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'tests.conftest' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/conftest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x7f780666a820>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x7f780666a9a0>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.faulthandler.FaultHandlerHooks object at 0x7f780666aa60>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.stepwise.StepwisePlugin object at 0x7f780666ab80>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x7f780666aee0>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x7f7806694820>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x7f7806694a60>
          manager: <_pytest.config.PytestPluginManager object at 0x7f78091f69d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x7f78089fd5b0>
          startdir: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii
      finish pytest_report_header --> [['rootdir: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii', 'plugins: pep8-1.0.6, asyncio-0.14.0, cov-2.10.0'], ['using: pytest-5.4.3 pylib-1.9.0', 'setuptools registered plugins:', '  pytest-pep8-1.0.6 at /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/pytest_pep8.py', '  pytest-asyncio-0.14.0 at /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/pytest_asyncio/plugin.py', '  pytest-cov-2.10.0 at /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/pytest_cov/plugin.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
    perform_collect <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0> ['/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii'] [collection]
        pytest_collectstart [hook]
            collector: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        processing argument (local('/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii'), []) [collection]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/docker
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
          early skip of rewriting module: py._code [assertion]
          early skip of rewriting module: py._code.code [assertion]
          early skip of rewriting module: repr [assertion]
            pytest_collect_directory [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/docker
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/aiomagnumopus.egg-info
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_directory [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/aiomagnumopus.egg-info
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.pytest_cache
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_directory [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_directory [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.tox
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.coverage
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.coverage
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.gitignore
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.gitignore
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/Dockerfile
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/Dockerfile
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/MANIFEST.in
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/MANIFEST.in
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/README.md
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/README.md
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/RULES.md
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/RULES.md
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/docker-compose.yml
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/docker-compose.yml
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/gunicorn_config.py
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/gunicorn_config.py
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/init_containers.sh
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/init_containers.sh
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/init_entrypoint.sh
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/init_entrypoint.sh
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/pytestdebug.log
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/pytestdebug.log
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/requirements.txt
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/requirements.txt
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/setup.cfg
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/setup.cfg
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/setup.py
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/setup.py
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tox.ini
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tox.ini
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/aiomagnumopus.egg-info/PKG-INFO
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/aiomagnumopus.egg-info/PKG-INFO
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/aiomagnumopus.egg-info/SOURCES.txt
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/aiomagnumopus.egg-info/SOURCES.txt
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/aiomagnumopus.egg-info/dependency_links.txt
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/aiomagnumopus.egg-info/dependency_links.txt
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/aiomagnumopus.egg-info/requires.txt
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/aiomagnumopus.egg-info/requires.txt
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/aiomagnumopus.egg-info/top_level.txt
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/aiomagnumopus.egg-info/top_level.txt
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/docker/storage
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_directory [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/docker/storage
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/docker/storage/storage.db
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/docker/storage/storage.db
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/models
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_directory [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/models
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/services
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_directory [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/services
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/resources
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_directory [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/resources
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/schemas
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_directory [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/schemas
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/repositories
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_directory [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/repositories
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/__init__.py
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/__init__.py
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/__init__.py
                  parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus> [hook]
            finish pytest_collect_file --> [<Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus>] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/models/__init__.py
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/models/__init__.py
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/models/__init__.py
                  parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/models> [hook]
            finish pytest_collect_file --> [<Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/models>] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/repositories/__init__.py
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/repositories/__init__.py
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/repositories/__init__.py
                  parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/repositories> [hook]
            finish pytest_collect_file --> [<Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/repositories>] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/resources/__init__.py
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/resources/__init__.py
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/resources/__init__.py
                  parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/resources> [hook]
            finish pytest_collect_file --> [<Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/resources>] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/schemas/__init__.py
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/schemas/__init__.py
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/schemas/__init__.py
                  parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/schemas> [hook]
            finish pytest_collect_file --> [<Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/schemas>] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/services/__init__.py
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/services/__init__.py
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/services/__init__.py
                  parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/services> [hook]
            finish pytest_collect_file --> [<Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/services>] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_directory [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_directory [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/__init__.py
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/__init__.py
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/__init__.py
                  parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests> [hook]
            finish pytest_collect_file --> [<Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests>] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/__init__.py
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/__init__.py
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/__init__.py
                  parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application> [hook]
            finish pytest_collect_file --> [<Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application>] [hook]
            pytest_ignore_collect [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/__init__.py
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/__init__.py
                parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/__init__.py
                  parent: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain> [hook]
            finish pytest_collect_file --> [<Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain>] [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=9 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=9 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus> [collection]
      pytest_collectstart [hook]
          collector: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus>
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/models
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/models
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/services
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/services
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/resources
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/resources
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/schemas
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/schemas
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/repositories
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/repositories
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/Pipfile
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/Pipfile
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/config.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/config.py
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/index.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/index.py
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/initialize.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/initialize.py
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/injection.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/injection.py
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/logger.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/logger.py
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/models/__init__.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/repositories/__init__.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/resources/__init__.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/schemas/__init__.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/services/__init__.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'magnumopus/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'magnumopus/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/models> [collection]
      pytest_collectstart [hook]
          collector: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/models>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/models>
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/models/base.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/models/base.py
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/models>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/models/substance.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/models/substance.py
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/models>
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'magnumopus/models/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'magnumopus/models/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/repositories> [collection]
      pytest_collectstart [hook]
          collector: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/repositories>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/repositories>
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/repositories/list_pantry.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/repositories/list_pantry.py
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/repositories>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/repositories/pantry.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/repositories/pantry.py
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/repositories>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/repositories/sqlalchemy_pantry.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/repositories/sqlalchemy_pantry.py
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/repositories>
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'magnumopus/repositories/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'magnumopus/repositories/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/resources> [collection]
      pytest_collectstart [hook]
          collector: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/resources>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/resources>
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/resources/alembic_instruction.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/resources/alembic_instruction.py
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/resources>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/resources/substance.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/resources/substance.py
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/resources>
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'magnumopus/resources/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'magnumopus/resources/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/schemas> [collection]
      pytest_collectstart [hook]
          collector: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/schemas>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/schemas>
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/schemas/substance_schema.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/schemas/substance_schema.py
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/schemas>
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'magnumopus/schemas/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'magnumopus/schemas/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/services> [collection]
      pytest_collectstart [hook]
          collector: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/services>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/services>
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/services/alembic.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/services/alembic.py
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/services>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/services/alembic_instruction_handler.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/services/alembic_instruction_handler.py
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/services>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/services/assessor.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/services/assessor.py
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/magnumopus/services>
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'magnumopus/services/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'magnumopus/services/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests> [collection]
      pytest_collectstart [hook]
          collector: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests>
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests>
        finish pytest_collect_directory --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/Pipfile
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/Pipfile
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/conftest.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/conftest.py
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/__init__.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/__init__.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application> [collection]
      pytest_collectstart [hook]
          collector: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application>
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/.coverage
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/.coverage
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/Pipfile
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/Pipfile
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/test_alembic_instruction_resource.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/test_alembic_instruction_resource.py
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application>
          pytest_pycollect_makemodule [hook]
              path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/test_alembic_instruction_resource.py
              parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application>
          finish pytest_pycollect_makemodule --> <Module test_alembic_instruction_resource.py> [hook]
        finish pytest_collect_file --> [<Module test_alembic_instruction_resource.py>] [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/test_philosophers_stone.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/test_philosophers_stone.py
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application>
          pytest_pycollect_makemodule [hook]
              path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/test_philosophers_stone.py
              parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application>
          finish pytest_pycollect_makemodule --> <Module test_philosophers_stone.py> [hook]
        finish pytest_collect_file --> [<Module test_philosophers_stone.py>] [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/test_substance_resource.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/test_substance_resource.py
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application>
          pytest_pycollect_makemodule [hook]
              path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/test_substance_resource.py
              parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application>
          finish pytest_pycollect_makemodule --> <Module test_substance_resource.py> [hook]
        finish pytest_collect_file --> [<Module test_substance_resource.py>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/application/__init__.py' lenresult=3 outcome='passed'> [hook]
    genitems <Module test_alembic_instruction_resource.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_alembic_instruction_resource.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_alembic_instruction_resource.py>
      early skip of rewriting module: tests.application [assertion]
      find_module called for: tests.application.test_alembic_instruction_resource [assertion]
      matched test file '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/test_alembic_instruction_resource.py' [assertion]
      found cached rewritten pyc for /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/test_alembic_instruction_resource.py [assertion]
      find_module called for: tests.application.test_substance_resource [assertion]
      matched test file '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/test_substance_resource.py' [assertion]
      found cached rewritten pyc for /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/test_substance_resource.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __name__
            obj: tests.application.test_alembic_instruction_resource
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __package__
            obj: tests.application
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f7808885370>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __spec__
            obj: ModuleSpec(name='tests.application.test_alembic_instruction_resource', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f7808885370>, origin='/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/test_alembic_instruction_resource.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __file__
            obj: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/test_alembic_instruction_resource.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __cached__
            obj: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/__pycache__/test_alembic_instruction_resource.cpython-38.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'breakpoint': <built-in function breakpoint>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'MemoryError': <class 'MemoryError'>, 'BufferError': <class 'BufferError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2020 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': Type license() to see the full license text, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: pytest
            obj: <module 'pytest' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: create_app
            obj: <function create_app at 0x7f78073cd9d0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: is_dictionary_inside
            obj: <function is_dictionary_inside at 0x7f7807e4e160>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: create_substance_request
            obj: <function create_substance_request at 0x7f780664f1f0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: create_alembic_instruction_request
            obj: <function create_alembic_instruction_request at 0x7f780669a700>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: test_create_alembic_mix_instruction
            obj: <function test_create_alembic_mix_instruction at 0x7f780669a8b0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f78065e04c0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_create_alembic_mix_instruction>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: test_create_alembic_process_instruction
            obj: <function test_create_alembic_process_instruction at 0x7f780664f820>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f7806649640>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_create_alembic_process_instruction>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __new__
            obj: <built-in method __new__ of type object at 0x8fae60>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_resource.py>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/application/test_alembic_instruction_resource.py' lenresult=2 outcome='passed'> [hook]
    genitems <Function test_create_alembic_mix_instruction> [collection]
      pytest_itemcollected [hook]
          item: <Function test_create_alembic_mix_instruction>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_create_alembic_process_instruction> [collection]
      pytest_itemcollected [hook]
          item: <Function test_create_alembic_process_instruction>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/application/test_alembic_instruction_resource.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_philosophers_stone.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_philosophers_stone.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_philosophers_stone.py>
      find_module called for: tests.application.test_philosophers_stone [assertion]
      matched test file '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/test_philosophers_stone.py' [assertion]
      found cached rewritten pyc for /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/test_philosophers_stone.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __name__
            obj: tests.application.test_philosophers_stone
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __package__
            obj: tests.application
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f7808885370>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __spec__
            obj: ModuleSpec(name='tests.application.test_philosophers_stone', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f7808885370>, origin='/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/test_philosophers_stone.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __file__
            obj: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/test_philosophers_stone.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __cached__
            obj: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/__pycache__/test_philosophers_stone.cpython-38.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'breakpoint': <built-in function breakpoint>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'MemoryError': <class 'MemoryError'>, 'BufferError': <class 'BufferError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2020 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': Type license() to see the full license text, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: pytest
            obj: <module 'pytest' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: create_app
            obj: <function create_app at 0x7f78073cd9d0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: is_dictionary_inside
            obj: <function is_dictionary_inside at 0x7f7807e4e160>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: test_create_philosophers_stone
            obj: <function test_create_philosophers_stone at 0x7f780664ff70>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f78065e0fa0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_create_philosophers_stone>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __new__
            obj: <built-in method __new__ of type object at 0x8fae60>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_philosophers_stone.py>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/application/test_philosophers_stone.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function test_create_philosophers_stone> [collection]
      pytest_itemcollected [hook]
          item: <Function test_create_philosophers_stone>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/application/test_philosophers_stone.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_substance_resource.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_substance_resource.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_substance_resource.py>
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __name__
            obj: tests.application.test_substance_resource
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __package__
            obj: tests.application
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f7808885370>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __spec__
            obj: ModuleSpec(name='tests.application.test_substance_resource', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f7808885370>, origin='/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/test_substance_resource.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __file__
            obj: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/test_substance_resource.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __cached__
            obj: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/application/__pycache__/test_substance_resource.cpython-38.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'breakpoint': <built-in function breakpoint>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'MemoryError': <class 'MemoryError'>, 'BufferError': <class 'BufferError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2020 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': Type license() to see the full license text, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: pytest
            obj: <module 'pytest' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: create_app
            obj: <function create_app at 0x7f78073cd9d0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: is_dictionary_inside
            obj: <function is_dictionary_inside at 0x7f7807e4e160>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: create_substance_request
            obj: <function create_substance_request at 0x7f780664f1f0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: index_substances_request
            obj: <function index_substances_request at 0x7f780664f160>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: test_create_substance
            obj: <function test_create_substance at 0x7f780664f040>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f78065e04c0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_create_substance>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: test_get_substances
            obj: <function test_get_substances at 0x7f780664f790>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f78065e0550>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_get_substances>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __new__
            obj: <built-in method __new__ of type object at 0x8fae60>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance_resource.py>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/application/test_substance_resource.py' lenresult=2 outcome='passed'> [hook]
    genitems <Function test_create_substance> [collection]
      pytest_itemcollected [hook]
          item: <Function test_create_substance>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_get_substances> [collection]
      pytest_itemcollected [hook]
          item: <Function test_get_substances>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/application/test_substance_resource.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/application/__init__.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain> [collection]
      pytest_collectstart [hook]
          collector: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain>
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_alembic.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_alembic.py
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain>
          pytest_pycollect_makemodule [hook]
              path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_alembic.py
              parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain>
          finish pytest_pycollect_makemodule --> <Module test_alembic.py> [hook]
        finish pytest_collect_file --> [<Module test_alembic.py>] [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_alembic_instruction_handler.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_alembic_instruction_handler.py
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain>
          pytest_pycollect_makemodule [hook]
              path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_alembic_instruction_handler.py
              parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain>
          finish pytest_pycollect_makemodule --> <Module test_alembic_instruction_handler.py> [hook]
        finish pytest_collect_file --> [<Module test_alembic_instruction_handler.py>] [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_pantry.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_pantry.py
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain>
          pytest_pycollect_makemodule [hook]
              path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_pantry.py
              parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain>
          finish pytest_pycollect_makemodule --> <Module test_pantry.py> [hook]
        finish pytest_collect_file --> [<Module test_pantry.py>] [hook]
        pytest_ignore_collect [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_substance.py
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_substance.py
            parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain>
          pytest_pycollect_makemodule [hook]
              path: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_substance.py
              parent: <Package /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain>
          finish pytest_pycollect_makemodule --> <Module test_substance.py> [hook]
        finish pytest_collect_file --> [<Module test_substance.py>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/domain/__init__.py' lenresult=4 outcome='passed'> [hook]
    genitems <Module test_alembic.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_alembic.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_alembic.py>
      early skip of rewriting module: tests.domain [assertion]
      find_module called for: tests.domain.test_alembic [assertion]
      matched test file '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_alembic.py' [assertion]
      found cached rewritten pyc for /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_alembic.py [assertion]
      early skip of rewriting module: magnumopus.services [assertion]
      early skip of rewriting module: magnumopus.services.alembic [assertion]
      early skip of rewriting module: magnumopus.models.substance [assertion]
      early skip of rewriting module: sqlalchemy_utils [assertion]
      early skip of rewriting module: sqlalchemy_utils.aggregates [assertion]
      early skip of rewriting module: sqlalchemy_utils.functions [assertion]
      early skip of rewriting module: sqlalchemy_utils.functions.database [assertion]
      early skip of rewriting module: sqlalchemy_utils.utils [assertion]
      early skip of rewriting module: sqlalchemy_utils.functions.orm [assertion]
      early skip of rewriting module: sqlalchemy.ext.hybrid [assertion]
      early skip of rewriting module: sqlalchemy_utils.functions.foreign_keys [assertion]
      early skip of rewriting module: sqlalchemy_utils.query_chain [assertion]
      early skip of rewriting module: sqlalchemy_utils.functions.mock [assertion]
      early skip of rewriting module: sqlalchemy_utils.functions.render [assertion]
      early skip of rewriting module: sqlalchemy_utils.functions.sort_query [assertion]
      early skip of rewriting module: sqlalchemy_utils.relationships [assertion]
      early skip of rewriting module: sqlalchemy_utils.relationships.chained_join [assertion]
      early skip of rewriting module: sqlalchemy_utils.asserts [assertion]
      early skip of rewriting module: sqlalchemy.dialects.postgresql [assertion]
      early skip of rewriting module: sqlalchemy.dialects.postgresql.base [assertion]
      early skip of rewriting module: sqlalchemy.dialects.postgresql.array [assertion]
      early skip of rewriting module: sqlalchemy.dialects.postgresql.hstore [assertion]
      early skip of rewriting module: sqlalchemy.dialects.postgresql.json [assertion]
      early skip of rewriting module: sqlalchemy.dialects.postgresql.ranges [assertion]
      early skip of rewriting module: sqlalchemy.dialects.postgresql.pg8000 [assertion]
      early skip of rewriting module: sqlalchemy.dialects.postgresql.psycopg2 [assertion]
      early skip of rewriting module: sqlalchemy.dialects.postgresql.psycopg2cffi [assertion]
      early skip of rewriting module: sqlalchemy.dialects.postgresql.pygresql [assertion]
      early skip of rewriting module: sqlalchemy.dialects.postgresql.pypostgresql [assertion]
      early skip of rewriting module: sqlalchemy.dialects.postgresql.zxjdbc [assertion]
      early skip of rewriting module: sqlalchemy.connectors [assertion]
      early skip of rewriting module: sqlalchemy.connectors.zxJDBC [assertion]
      early skip of rewriting module: sqlalchemy.dialects.postgresql.dml [assertion]
      early skip of rewriting module: sqlalchemy.dialects.postgresql.ext [assertion]
      early skip of rewriting module: sqlalchemy_utils.exceptions [assertion]
      early skip of rewriting module: sqlalchemy_utils.expressions [assertion]
      early skip of rewriting module: sqlalchemy.ext.compiler [assertion]
      early skip of rewriting module: sqlalchemy_utils.generic [assertion]
      early skip of rewriting module: sqlalchemy_utils.i18n [assertion]
      early skip of rewriting module: babel [assertion]
      early skip of rewriting module: sqlalchemy_utils.listeners [assertion]
      early skip of rewriting module: sqlalchemy_utils.models [assertion]
      early skip of rewriting module: sqlalchemy_utils.observer [assertion]
      early skip of rewriting module: sqlalchemy_utils.path [assertion]
      early skip of rewriting module: sqlalchemy_utils.primitives [assertion]
      early skip of rewriting module: sqlalchemy_utils.primitives.country [assertion]
      early skip of rewriting module: sqlalchemy_utils.primitives.currency [assertion]
      early skip of rewriting module: sqlalchemy_utils.primitives.ltree [assertion]
      early skip of rewriting module: sqlalchemy_utils.primitives.weekday [assertion]
      early skip of rewriting module: sqlalchemy_utils.primitives.weekdays [assertion]
      early skip of rewriting module: sqlalchemy_utils.proxy_dict [assertion]
      early skip of rewriting module: sqlalchemy_utils.types [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.arrow [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.enriched_datetime [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.enriched_datetime.arrow_datetime [assertion]
      early skip of rewriting module: arrow [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.enriched_datetime.pendulum_date [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.enriched_datetime.pendulum_datetime [assertion]
      early skip of rewriting module: pendulum [assertion]
      early skip of rewriting module: pendulum [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.enriched_datetime.enriched_datetime_type [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.scalar_coercible [assertion]
      early skip of rewriting module: arrow [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.choice [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.color [assertion]
      early skip of rewriting module: colour [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.country [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.currency [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.email [assertion]
      early skip of rewriting module: sqlalchemy_utils.operators [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.encrypted [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.encrypted.encrypted_type [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.encrypted.padding [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.json [assertion]
      early skip of rewriting module: anyjson [assertion]
      early skip of rewriting module: cryptography [assertion]
      early skip of rewriting module: dateutil [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.enriched_datetime.enriched_date_type [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.ip_address [assertion]
      early skip of rewriting module: ipaddress [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.locale [assertion]
      early skip of rewriting module: babel [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.ltree [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.password [assertion]
      early skip of rewriting module: sqlalchemy.dialects.oracle [assertion]
      early skip of rewriting module: sqlalchemy.dialects.oracle.base [assertion]
      early skip of rewriting module: sqlalchemy.dialects.oracle.cx_oracle [assertion]
      early skip of rewriting module: sqlalchemy.dialects.oracle.zxjdbc [assertion]
      early skip of rewriting module: sqlalchemy.dialects.sqlite [assertion]
      early skip of rewriting module: sqlalchemy.dialects.sqlite.base [assertion]
      early skip of rewriting module: sqlalchemy.dialects.sqlite.json [assertion]
      early skip of rewriting module: sqlalchemy.dialects.sqlite.pysqlcipher [assertion]
      early skip of rewriting module: sqlalchemy.dialects.sqlite.pysqlite [assertion]
      early skip of rewriting module: sqlalchemy.ext.mutable [assertion]
      early skip of rewriting module: passlib [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.pg_composite [assertion]
      early skip of rewriting module: psycopg2 [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.phone_number [assertion]
      early skip of rewriting module: phonenumbers [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.range [assertion]
      early skip of rewriting module: intervals [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.scalar_list [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.timezone [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.ts_vector [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.url [assertion]
      early skip of rewriting module: furl [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.uuid [assertion]
      early skip of rewriting module: sqlalchemy.dialects.mssql [assertion]
      early skip of rewriting module: sqlalchemy.dialects.mssql.adodbapi [assertion]
      early skip of rewriting module: sqlalchemy.dialects.mssql.base [assertion]
      early skip of rewriting module: sqlalchemy.dialects.mssql.information_schema [assertion]
      early skip of rewriting module: sqlalchemy.dialects.mssql.mxodbc [assertion]
      early skip of rewriting module: sqlalchemy.dialects.mssql.pyodbc [assertion]
      early skip of rewriting module: sqlalchemy.connectors.pyodbc [assertion]
      early skip of rewriting module: sqlalchemy.connectors.mxodbc [assertion]
      early skip of rewriting module: sqlalchemy.dialects.mssql.pymssql [assertion]
      early skip of rewriting module: sqlalchemy.dialects.mssql.zxjdbc [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.weekdays [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.bit [assertion]
      early skip of rewriting module: sqlalchemy_utils.view [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __name__
            obj: tests.domain.test_alembic
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __package__
            obj: tests.domain
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f7808885370>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __spec__
            obj: ModuleSpec(name='tests.domain.test_alembic', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f7808885370>, origin='/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_alembic.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __file__
            obj: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_alembic.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __cached__
            obj: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/__pycache__/test_alembic.cpython-38.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'breakpoint': <built-in function breakpoint>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'MemoryError': <class 'MemoryError'>, 'BufferError': <class 'BufferError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2020 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': Type license() to see the full license text, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: pytest
            obj: <module 'pytest' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: Alembic
            obj: <class 'magnumopus.services.alembic.Alembic'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: NotEnoughSubstancesToMixException
            obj: <class 'magnumopus.services.alembic.NotEnoughSubstancesToMixException'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: UnknownProcessException
            obj: <class 'magnumopus.services.alembic.UnknownProcessException'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: Substance
            obj: <class 'magnumopus.models.substance.Substance'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: test_can_set_up_my_alembic
            obj: <function test_can_set_up_my_alembic at 0x7f780664fb80>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f7806623d30>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_can_set_up_my_alembic>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: test_can_mix_multiple_substances_in_my_alembic
            obj: <function test_can_mix_multiple_substances_in_my_alembic at 0x7f780664faf0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f7806623d30>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_can_mix_multiple_substances_in_my_alembic>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: test_cannot_mix_one_substance_in_my_alembic
            obj: <function test_cannot_mix_one_substance_in_my_alembic at 0x7f78063da0d0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f7806623d30>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_cannot_mix_one_substance_in_my_alembic>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: test_mixing_sulphur_salt_and_mercury_gives_gloop
            obj: <function test_mixing_sulphur_salt_and_mercury_gives_gloop at 0x7f78063da160>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f7806623d30>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_mixing_sulphur_salt_and_mercury_gives_gloop>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: test_mixing_other_recipes_gives_sludge
            obj: <function test_mixing_other_recipes_gives_sludge at 0x7f78063da1f0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f7806623d30>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_mixing_other_recipes_gives_sludge>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: test_can_process_substance
            obj: <function test_can_process_substance at 0x7f78063da280>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f7806623d30>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_can_process_substance>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: test_cannot_perform_unknown_process
            obj: <function test_cannot_perform_unknown_process at 0x7f78063da310>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f7806623d30>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_cannot_perform_unknown_process>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __new__
            obj: <built-in method __new__ of type object at 0x8fae60>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic.py>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/domain/test_alembic.py' lenresult=7 outcome='passed'> [hook]
    genitems <Function test_can_set_up_my_alembic> [collection]
      pytest_itemcollected [hook]
          item: <Function test_can_set_up_my_alembic>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_can_mix_multiple_substances_in_my_alembic> [collection]
      pytest_itemcollected [hook]
          item: <Function test_can_mix_multiple_substances_in_my_alembic>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_cannot_mix_one_substance_in_my_alembic> [collection]
      pytest_itemcollected [hook]
          item: <Function test_cannot_mix_one_substance_in_my_alembic>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_mixing_sulphur_salt_and_mercury_gives_gloop> [collection]
      pytest_itemcollected [hook]
          item: <Function test_mixing_sulphur_salt_and_mercury_gives_gloop>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_mixing_other_recipes_gives_sludge> [collection]
      pytest_itemcollected [hook]
          item: <Function test_mixing_other_recipes_gives_sludge>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_can_process_substance> [collection]
      pytest_itemcollected [hook]
          item: <Function test_can_process_substance>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_cannot_perform_unknown_process> [collection]
      pytest_itemcollected [hook]
          item: <Function test_cannot_perform_unknown_process>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/domain/test_alembic.py' lenresult=7 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_alembic_instruction_handler.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_alembic_instruction_handler.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_alembic_instruction_handler.py>
      find_module called for: tests.domain.test_alembic_instruction_handler [assertion]
      matched test file '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_alembic_instruction_handler.py' [assertion]
      found cached rewritten pyc for /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_alembic_instruction_handler.py [assertion]
      early skip of rewriting module: magnumopus.services.alembic_instruction_handler [assertion]
      early skip of rewriting module: injector [assertion]
      early skip of rewriting module: magnumopus.repositories [assertion]
      early skip of rewriting module: magnumopus.repositories.pantry [assertion]
      early skip of rewriting module: magnumopus.repositories.list_pantry [assertion]
      early skip of rewriting module: magnumopus.repositories.sqlalchemy_pantry [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __name__
            obj: tests.domain.test_alembic_instruction_handler
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __package__
            obj: tests.domain
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f7808885370>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __spec__
            obj: ModuleSpec(name='tests.domain.test_alembic_instruction_handler', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f7808885370>, origin='/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_alembic_instruction_handler.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __file__
            obj: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_alembic_instruction_handler.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __cached__
            obj: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/__pycache__/test_alembic_instruction_handler.cpython-38.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'breakpoint': <built-in function breakpoint>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'MemoryError': <class 'MemoryError'>, 'BufferError': <class 'BufferError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2020 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': Type license() to see the full license text, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: pytest
            obj: <module 'pytest' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: AlembicInstruction
            obj: <class 'magnumopus.services.alembic_instruction_handler.AlembicInstruction'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: AlembicInstructionHandler
            obj: <class 'magnumopus.services.alembic_instruction_handler.AlembicInstructionHandler'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: ListPantry
            obj: <class 'magnumopus.repositories.list_pantry.ListPantry'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: Substance
            obj: <class 'magnumopus.models.substance.Substance'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: instruction_unknown
            obj: <function instruction_unknown at 0x7f78063da4c0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: instruction
            obj: <function instruction at 0x7f780631ea60>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: pantry
            obj: <function pantry at 0x7f780631eb80>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: test_can_set_up_my_alembic_instruction_handler
            obj: <function test_can_set_up_my_alembic_instruction_handler at 0x7f780631ec10>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f7806325040>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_can_set_up_my_alembic_instruction_handler>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __new__
            obj: <built-in method __new__ of type object at 0x8fae60>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_alembic_instruction_handler.py>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/domain/test_alembic_instruction_handler.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function test_can_set_up_my_alembic_instruction_handler> [collection]
      pytest_itemcollected [hook]
          item: <Function test_can_set_up_my_alembic_instruction_handler>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/domain/test_alembic_instruction_handler.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_pantry.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_pantry.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_pantry.py>
      find_module called for: tests.domain.test_pantry [assertion]
      matched test file '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_pantry.py' [assertion]
      found cached rewritten pyc for /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_pantry.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __name__
            obj: tests.domain.test_pantry
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __package__
            obj: tests.domain
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f7808885370>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __spec__
            obj: ModuleSpec(name='tests.domain.test_pantry', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f7808885370>, origin='/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_pantry.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __file__
            obj: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_pantry.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __cached__
            obj: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/__pycache__/test_pantry.cpython-38.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'breakpoint': <built-in function breakpoint>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'MemoryError': <class 'MemoryError'>, 'BufferError': <class 'BufferError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2020 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': Type license() to see the full license text, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: pytest
            obj: <module 'pytest' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: ListPantry
            obj: <class 'magnumopus.repositories.list_pantry.ListPantry'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: Substance
            obj: <class 'magnumopus.models.substance.Substance'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: list_pantry
            obj: <function list_pantry at 0x7f780631eca0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: pantries
            obj: <function pantries at 0x7f780631ee50>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: test_can_add_to_pantry
            obj: <function test_can_add_to_pantry at 0x7f780631eee0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f78063257f0>
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
                val: list
                argname: pantry_type
            finish pytest_make_parametrize_id --> None [hook]
          early skip of rewriting module: encodings.unicode_escape [assertion]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_can_add_to_pantry[list]>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: test_can_retrieve_substance_from_pantry_by_nature
            obj: <function test_can_retrieve_substance_from_pantry_by_nature at 0x7f780631ef70>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f7806325670>
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
                val: list
                argname: pantry_type
            finish pytest_make_parametrize_id --> None [hook]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_can_retrieve_substance_from_pantry_by_nature[list]>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __new__
            obj: <built-in method __new__ of type object at 0x8fae60>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pantry.py>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/domain/test_pantry.py' lenresult=2 outcome='passed'> [hook]
    genitems <Function test_can_add_to_pantry[list]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_can_add_to_pantry[list]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_can_retrieve_substance_from_pantry_by_nature[list]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_can_retrieve_substance_from_pantry_by_nature[list]>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/domain/test_pantry.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_substance.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_substance.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_substance.py>
      find_module called for: tests.domain.test_substance [assertion]
      matched test file '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_substance.py' [assertion]
      found cached rewritten pyc for /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_substance.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __name__
            obj: tests.domain.test_substance
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __doc__
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __package__
            obj: tests.domain
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f7808885370>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __spec__
            obj: ModuleSpec(name='tests.domain.test_substance', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f7808885370>, origin='/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_substance.py')
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __file__
            obj: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/test_substance.py
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __cached__
            obj: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/tests/domain/__pycache__/test_substance.cpython-38.pyc
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __builtins__
            obj: {'__name__': 'builtins', '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'breakpoint': <built-in function breakpoint>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'Exception': <class 'Exception'>, 'TypeError': <class 'TypeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'GeneratorExit': <class 'GeneratorExit'>, 'SystemExit': <class 'SystemExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'ImportError': <class 'ImportError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'OSError': <class 'OSError'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'EOFError': <class 'EOFError'>, 'RuntimeError': <class 'RuntimeError'>, 'RecursionError': <class 'RecursionError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'NameError': <class 'NameError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'AttributeError': <class 'AttributeError'>, 'SyntaxError': <class 'SyntaxError'>, 'IndentationError': <class 'IndentationError'>, 'TabError': <class 'TabError'>, 'LookupError': <class 'LookupError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ValueError': <class 'ValueError'>, 'UnicodeError': <class 'UnicodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'AssertionError': <class 'AssertionError'>, 'ArithmeticError': <class 'ArithmeticError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'SystemError': <class 'SystemError'>, 'ReferenceError': <class 'ReferenceError'>, 'MemoryError': <class 'MemoryError'>, 'BufferError': <class 'BufferError'>, 'Warning': <class 'Warning'>, 'UserWarning': <class 'UserWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'BytesWarning': <class 'BytesWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionError': <class 'ConnectionError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'InterruptedError': <class 'InterruptedError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2020 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': Type license() to see the full license text, 'help': Type help() for interactive help, or help(object) for help about object.}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii/.env/lib/python3.8/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: Substance
            obj: <class 'magnumopus.models.substance.Substance'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: test_can_cook_substance
            obj: <function test_can_cook_substance at 0x7f780632d3a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f7806325e20>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_can_cook_substance>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: test_can_wash_substance
            obj: <function test_can_wash_substance at 0x7f780632d430>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f7806325e20>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_can_wash_substance>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: test_can_pickle_substance
            obj: <function test_can_pickle_substance at 0x7f780632d550>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f7806325e20>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_can_pickle_substance>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: test_can_ferment_substance
            obj: <function test_can_ferment_substance at 0x7f780632d5e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f7806325e20>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_can_ferment_substance>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: test_can_cook_and_ferment_substance
            obj: <function test_can_cook_and_ferment_substance at 0x7f780632d670>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f7806325e20>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_can_cook_and_ferment_substance>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: test_the_order_of_processes_applied_to_a_substance_matters
            obj: <function test_the_order_of_processes_applied_to_a_substance_matters at 0x7f780632d700>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f7806325e20>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_the_order_of_processes_applied_to_a_substance_matters>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __new__
            obj: <built-in method __new__ of type object at 0x8fae60>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __init_subclass__
            obj: <method '__init_subclass__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __format__
            obj: <method '__format__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_substance.py>
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/domain/test_substance.py' lenresult=6 outcome='passed'> [hook]
    genitems <Function test_can_cook_substance> [collection]
      pytest_itemcollected [hook]
          item: <Function test_can_cook_substance>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_can_wash_substance> [collection]
      pytest_itemcollected [hook]
          item: <Function test_can_wash_substance>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_can_pickle_substance> [collection]
      pytest_itemcollected [hook]
          item: <Function test_can_pickle_substance>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_can_ferment_substance> [collection]
      pytest_itemcollected [hook]
          item: <Function test_can_ferment_substance>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_can_cook_and_ferment_substance> [collection]
      pytest_itemcollected [hook]
          item: <Function test_can_cook_and_ferment_substance>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_the_order_of_processes_applied_to_a_substance_matters> [collection]
      pytest_itemcollected [hook]
          item: <Function test_the_order_of_processes_applied_to_a_substance_matters>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/domain/test_substance.py' lenresult=6 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/domain/__init__.py' lenresult=4 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          config: <_pytest.config.Config object at 0x7f78089fd5b0>
          items: [<Function test_create_alembic_mix_instruction>, <Function test_create_alembic_process_instruction>, <Function test_create_philosophers_stone>, <Function test_create_substance>, <Function test_get_substances>, <Function test_can_set_up_my_alembic>, <Function test_can_mix_multiple_substances_in_my_alembic>, <Function test_cannot_mix_one_substance_in_my_alembic>, <Function test_mixing_sulphur_salt_and_mercury_gives_gloop>, <Function test_mixing_other_recipes_gives_sludge>, <Function test_can_process_substance>, <Function test_cannot_perform_unknown_process>, <Function test_can_set_up_my_alembic_instruction_handler>, <Function test_can_add_to_pantry[list]>, <Function test_can_retrieve_substance_from_pantry_by_nature[list]>, <Function test_can_cook_substance>, <Function test_can_wash_substance>, <Function test_can_pickle_substance>, <Function test_can_ferment_substance>, <Function test_can_cook_and_ferment_substance>, <Function test_the_order_of_processes_applied_to_a_substance_matters>]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        pytest_report_collectionfinish [hook]
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
            startdir: /home/philtweir/Work/Training/PythonCourse/python-course/022-burette/magnum_opus_ii
            items: [<Function test_create_alembic_mix_instruction>, <Function test_create_alembic_process_instruction>, <Function test_create_philosophers_stone>, <Function test_create_substance>, <Function test_get_substances>, <Function test_can_set_up_my_alembic>, <Function test_can_mix_multiple_substances_in_my_alembic>, <Function test_cannot_mix_one_substance_in_my_alembic>, <Function test_mixing_sulphur_salt_and_mercury_gives_gloop>, <Function test_mixing_other_recipes_gives_sludge>, <Function test_can_process_substance>, <Function test_cannot_perform_unknown_process>, <Function test_can_set_up_my_alembic_instruction_handler>, <Function test_can_add_to_pantry[list]>, <Function test_can_retrieve_substance_from_pantry_by_nature[list]>, <Function test_can_cook_substance>, <Function test_can_wash_substance>, <Function test_can_pickle_substance>, <Function test_can_ferment_substance>, <Function test_can_cook_and_ferment_substance>, <Function test_the_order_of_processes_applied_to_a_substance_matters>]
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> [<Function test_create_alembic_mix_instruction>, <Function test_create_alembic_process_instruction>, <Function test_create_philosophers_stone>, <Function test_create_substance>, <Function test_get_substances>, <Function test_can_set_up_my_alembic>, <Function test_can_mix_multiple_substances_in_my_alembic>, <Function test_cannot_mix_one_substance_in_my_alembic>, <Function test_mixing_sulphur_salt_and_mercury_gives_gloop>, <Function test_mixing_other_recipes_gives_sludge>, <Function test_can_process_substance>, <Function test_cannot_perform_unknown_process>, <Function test_can_set_up_my_alembic_instruction_handler>, <Function test_can_add_to_pantry[list]>, <Function test_can_retrieve_substance_from_pantry_by_nature[list]>, <Function test_can_cook_substance>, <Function test_can_wash_substance>, <Function test_can_pickle_substance>, <Function test_can_ferment_substance>, <Function test_can_cook_and_ferment_substance>, <Function test_the_order_of_processes_applied_to_a_substance_matters>] [hook]
    pytest_runtestloop [hook]
        session: <Session magnum_opus_ii exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=21>
      pytest_runtest_protocol [hook]
          item: <Function test_create_alembic_mix_instruction>
          nextitem: <Function test_create_alembic_process_instruction>
        pytest_runtest_logstart [hook]
            nodeid: tests/application/test_alembic_instruction_resource.py::test_create_alembic_mix_instruction
            location: ('tests/application/test_alembic_instruction_resource.py', 16, 'test_create_alembic_mix_instruction')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_create_alembic_mix_instruction>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Function test_create_alembic_mix_instruction>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests'>
              request: <SubRequest 'app' for <Function test_create_alembic_mix_instruction>>
          early skip of rewriting module: magnumopus.resources [assertion]
          early skip of rewriting module: magnumopus.resources.substance [assertion]
          early skip of rewriting module: magnumopus.injection [assertion]
          early skip of rewriting module: magnumopus.schemas [assertion]
          early skip of rewriting module: flask_marshmallow [assertion]
          early skip of rewriting module: distutils [assertion]
          early skip of rewriting module: distutils.version [assertion]
          early skip of rewriting module: marshmallow [assertion]
          early skip of rewriting module: marshmallow.schema [assertion]
          early skip of rewriting module: marshmallow.base [assertion]
          early skip of rewriting module: marshmallow.fields [assertion]
          early skip of rewriting module: marshmallow.validate [assertion]
          early skip of rewriting module: marshmallow.types [assertion]
          early skip of rewriting module: marshmallow.exceptions [assertion]
          early skip of rewriting module: marshmallow.utils [assertion]
          early skip of rewriting module: marshmallow.class_registry [assertion]
          early skip of rewriting module: marshmallow.error_store [assertion]
          early skip of rewriting module: marshmallow.orderedset [assertion]
          early skip of rewriting module: marshmallow.decorators [assertion]
          early skip of rewriting module: flask_marshmallow.fields [assertion]
          early skip of rewriting module: flask_marshmallow.schema [assertion]
          early skip of rewriting module: flask_marshmallow.compat [assertion]
          early skip of rewriting module: flask_marshmallow.sqla [assertion]
          early skip of rewriting module: six.moves.urllib [assertion]
          early skip of rewriting module: marshmallow_sqlalchemy [assertion]
          early skip of rewriting module: marshmallow_sqlalchemy.schema [assertion]
          early skip of rewriting module: marshmallow_sqlalchemy.schema.model_schema [assertion]
          early skip of rewriting module: marshmallow_sqlalchemy.convert [assertion]
          early skip of rewriting module: sqlalchemy.dialects.mysql [assertion]
          early skip of rewriting module: sqlalchemy.dialects.mysql.base [assertion]
          early skip of rewriting module: sqlalchemy.dialects.mysql.reflection [assertion]
          early skip of rewriting module: sqlalchemy.dialects.mysql.enumerated [assertion]
          early skip of rewriting module: sqlalchemy.dialects.mysql.types [assertion]
          early skip of rewriting module: sqlalchemy.dialects.mysql.json [assertion]
          early skip of rewriting module: sqlalchemy.dialects.mysql.cymysql [assertion]
          early skip of rewriting module: sqlalchemy.dialects.mysql.mysqldb [assertion]
          early skip of rewriting module: sqlalchemy.dialects.mysql.gaerdbms [assertion]
          early skip of rewriting module: sqlalchemy.dialects.mysql.mysqlconnector [assertion]
          early skip of rewriting module: sqlalchemy.dialects.mysql.oursql [assertion]
          early skip of rewriting module: sqlalchemy.dialects.mysql.pymysql [assertion]
          early skip of rewriting module: sqlalchemy.dialects.mysql.pyodbc [assertion]
          early skip of rewriting module: sqlalchemy.dialects.mysql.zxjdbc [assertion]
          early skip of rewriting module: sqlalchemy.dialects.mysql.dml [assertion]
          early skip of rewriting module: marshmallow_sqlalchemy.exceptions [assertion]
          early skip of rewriting module: marshmallow_sqlalchemy.fields [assertion]
          early skip of rewriting module: marshmallow_sqlalchemy.schema.schema_meta [assertion]
          early skip of rewriting module: marshmallow_sqlalchemy.schema.load_instance_mixin [assertion]
          early skip of rewriting module: marshmallow_sqlalchemy.schema.table_schema [assertion]
          early skip of rewriting module: marshmallow_sqlalchemy.schema.sqlalchemy_schema [assertion]
          early skip of rewriting module: magnumopus.schemas.substance_schema [assertion]
          early skip of rewriting module: magnumopus.services.assessor [assertion]
          early skip of rewriting module: magnumopus.resources.alembic_instruction [assertion]
          early skip of rewriting module: magnumopus.logger [assertion]
          early skip of rewriting module: magnumopus.config [assertion]
          finish pytest_fixture_setup --> <quart_openapi.Pint object at 0x7f7806342460> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='tests'>
              request: <SubRequest 'client' for <Function test_create_alembic_mix_instruction>>
          finish pytest_fixture_setup --> <quart.testing.QuartClient object at 0x7f78061e4a30> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_create_alembic_mix_instruction>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/application/test_alembic_instruction_resource.py::test_create_alembic_mix_instruction' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/application/test_alembic_instruction_resource.py::test_create_alembic_mix_instruction' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/application/test_alembic_instruction_resource.py::test_create_alembic_mix_instruction' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_create_alembic_mix_instruction>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_create_alembic_mix_instruction>
            pytest_assertrepr_compare [hook]
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
                op: ==
                left: 500
                right: 201
            finish pytest_assertrepr_compare --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_create_alembic_mix_instruction>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError('assert 500 == 201\n +  where 500 = Response(500).status_code') tblen=31>>
        finish pytest_runtest_makereport --> <TestReport 'tests/application/test_alembic_instruction_resource.py::test_create_alembic_mix_instruction' when='call' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/application/test_alembic_instruction_resource.py::test_create_alembic_mix_instruction' when='call' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/application/test_alembic_instruction_resource.py::test_create_alembic_mix_instruction' when='call' outcome='failed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            node: <Function test_create_alembic_mix_instruction>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError('assert 500 == 201\n +  where 500 = Response(500).status_code') tblen=1>>
            report: <TestReport 'tests/application/test_alembic_instruction_resource.py::test_create_alembic_mix_instruction' when='call' outcome='failed'>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_create_alembic_mix_instruction>
            nextitem: <Function test_create_alembic_process_instruction>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='tests'>
              request: <SubRequest 'client' for <Function test_create_alembic_mix_instruction>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='tests'>
              request: <SubRequest 'client' for <Function test_create_alembic_mix_instruction>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests'>
              request: <SubRequest 'app' for <Function test_create_alembic_mix_instruction>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Function test_create_alembic_mix_instruction>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_create_alembic_mix_instruction>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/application/test_alembic_instruction_resource.py::test_create_alembic_mix_instruction' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/application/test_alembic_instruction_resource.py::test_create_alembic_mix_instruction' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/application/test_alembic_instruction_resource.py::test_create_alembic_mix_instruction' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/application/test_alembic_instruction_resource.py::test_create_alembic_mix_instruction
            location: ('tests/application/test_alembic_instruction_resource.py', 16, 'test_create_alembic_mix_instruction')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_create_alembic_process_instruction>
          nextitem: <Function test_create_philosophers_stone>
        pytest_runtest_logstart [hook]
            nodeid: tests/application/test_alembic_instruction_resource.py::test_create_alembic_process_instruction
            location: ('tests/application/test_alembic_instruction_resource.py', 34, 'test_create_alembic_process_instruction')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_create_alembic_process_instruction>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Function test_create_alembic_process_instruction>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests'>
              request: <SubRequest 'app' for <Function test_create_alembic_process_instruction>>
          finish pytest_fixture_setup --> <quart_openapi.Pint object at 0x7f78059a94f0> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='tests'>
              request: <SubRequest 'client' for <Function test_create_alembic_process_instruction>>
          finish pytest_fixture_setup --> <quart.testing.QuartClient object at 0x7f78059317f0> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_create_alembic_process_instruction>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/application/test_alembic_instruction_resource.py::test_create_alembic_process_instruction' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/application/test_alembic_instruction_resource.py::test_create_alembic_process_instruction' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/application/test_alembic_instruction_resource.py::test_create_alembic_process_instruction' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_create_alembic_process_instruction>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_create_alembic_process_instruction>
            pytest_assertrepr_compare [hook]
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
                op: ==
                left: 500
                right: 201
            finish pytest_assertrepr_compare --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_create_alembic_process_instruction>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError('assert 500 == 201\n +  where 500 = Response(500).status_code') tblen=31>>
        finish pytest_runtest_makereport --> <TestReport 'tests/application/test_alembic_instruction_resource.py::test_create_alembic_process_instruction' when='call' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/application/test_alembic_instruction_resource.py::test_create_alembic_process_instruction' when='call' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/application/test_alembic_instruction_resource.py::test_create_alembic_process_instruction' when='call' outcome='failed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            node: <Function test_create_alembic_process_instruction>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError('assert 500 == 201\n +  where 500 = Response(500).status_code') tblen=1>>
            report: <TestReport 'tests/application/test_alembic_instruction_resource.py::test_create_alembic_process_instruction' when='call' outcome='failed'>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_create_alembic_process_instruction>
            nextitem: <Function test_create_philosophers_stone>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='tests'>
              request: <SubRequest 'client' for <Function test_create_alembic_process_instruction>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='tests'>
              request: <SubRequest 'client' for <Function test_create_alembic_process_instruction>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests'>
              request: <SubRequest 'app' for <Function test_create_alembic_process_instruction>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='tests'>
              request: <SubRequest 'client' for <Function test_create_alembic_process_instruction>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests'>
              request: <SubRequest 'app' for <Function test_create_alembic_process_instruction>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Function test_create_alembic_process_instruction>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_create_alembic_process_instruction>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/application/test_alembic_instruction_resource.py::test_create_alembic_process_instruction' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/application/test_alembic_instruction_resource.py::test_create_alembic_process_instruction' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/application/test_alembic_instruction_resource.py::test_create_alembic_process_instruction' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/application/test_alembic_instruction_resource.py::test_create_alembic_process_instruction
            location: ('tests/application/test_alembic_instruction_resource.py', 34, 'test_create_alembic_process_instruction')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_create_philosophers_stone>
          nextitem: <Function test_create_substance>
        pytest_runtest_logstart [hook]
            nodeid: tests/application/test_philosophers_stone.py::test_create_philosophers_stone
            location: ('tests/application/test_philosophers_stone.py', 5, 'test_create_philosophers_stone')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_create_philosophers_stone>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Function test_create_philosophers_stone>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests'>
              request: <SubRequest 'app' for <Function test_create_philosophers_stone>>
          finish pytest_fixture_setup --> <quart_openapi.Pint object at 0x7f7805950430> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='tests'>
              request: <SubRequest 'client' for <Function test_create_philosophers_stone>>
          finish pytest_fixture_setup --> <quart.testing.QuartClient object at 0x7f780594b1f0> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_create_philosophers_stone>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/application/test_philosophers_stone.py::test_create_philosophers_stone' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/application/test_philosophers_stone.py::test_create_philosophers_stone' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/application/test_philosophers_stone.py::test_create_philosophers_stone' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_create_philosophers_stone>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_create_philosophers_stone>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_create_philosophers_stone>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/application/test_philosophers_stone.py::test_create_philosophers_stone' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/application/test_philosophers_stone.py::test_create_philosophers_stone' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/application/test_philosophers_stone.py::test_create_philosophers_stone' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_create_philosophers_stone>
            nextitem: <Function test_create_substance>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='tests'>
              request: <SubRequest 'client' for <Function test_create_philosophers_stone>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='tests'>
              request: <SubRequest 'client' for <Function test_create_philosophers_stone>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests'>
              request: <SubRequest 'app' for <Function test_create_philosophers_stone>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='tests'>
              request: <SubRequest 'client' for <Function test_create_philosophers_stone>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests'>
              request: <SubRequest 'app' for <Function test_create_philosophers_stone>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests'>
              request: <SubRequest 'app' for <Function test_create_philosophers_stone>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Function test_create_philosophers_stone>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_create_philosophers_stone>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/application/test_philosophers_stone.py::test_create_philosophers_stone' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/application/test_philosophers_stone.py::test_create_philosophers_stone' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/application/test_philosophers_stone.py::test_create_philosophers_stone' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/application/test_philosophers_stone.py::test_create_philosophers_stone
            location: ('tests/application/test_philosophers_stone.py', 5, 'test_create_philosophers_stone')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_create_substance>
          nextitem: <Function test_get_substances>
        pytest_runtest_logstart [hook]
            nodeid: tests/application/test_substance_resource.py::test_create_substance
            location: ('tests/application/test_substance_resource.py', 12, 'test_create_substance')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_create_substance>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Function test_create_substance>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests'>
              request: <SubRequest 'app' for <Function test_create_substance>>
          finish pytest_fixture_setup --> <quart_openapi.Pint object at 0x7f7805953550> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='tests'>
              request: <SubRequest 'client' for <Function test_create_substance>>
          finish pytest_fixture_setup --> <quart.testing.QuartClient object at 0x7f78059536d0> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_create_substance>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/application/test_substance_resource.py::test_create_substance' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/application/test_substance_resource.py::test_create_substance' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/application/test_substance_resource.py::test_create_substance' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_create_substance>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_create_substance>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_create_substance>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/application/test_substance_resource.py::test_create_substance' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/application/test_substance_resource.py::test_create_substance' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/application/test_substance_resource.py::test_create_substance' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_create_substance>
            nextitem: <Function test_get_substances>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='tests'>
              request: <SubRequest 'client' for <Function test_create_substance>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='tests'>
              request: <SubRequest 'client' for <Function test_create_substance>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests'>
              request: <SubRequest 'app' for <Function test_create_substance>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='tests'>
              request: <SubRequest 'client' for <Function test_create_substance>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests'>
              request: <SubRequest 'app' for <Function test_create_substance>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Function test_create_substance>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_create_substance>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/application/test_substance_resource.py::test_create_substance' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/application/test_substance_resource.py::test_create_substance' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/application/test_substance_resource.py::test_create_substance' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/application/test_substance_resource.py::test_create_substance
            location: ('tests/application/test_substance_resource.py', 12, 'test_create_substance')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_get_substances>
          nextitem: <Function test_can_set_up_my_alembic>
        pytest_runtest_logstart [hook]
            nodeid: tests/application/test_substance_resource.py::test_get_substances
            location: ('tests/application/test_substance_resource.py', 29, 'test_get_substances')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_get_substances>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Function test_get_substances>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests'>
              request: <SubRequest 'app' for <Function test_get_substances>>
          finish pytest_fixture_setup --> <quart_openapi.Pint object at 0x7f78059538b0> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='tests'>
              request: <SubRequest 'client' for <Function test_get_substances>>
          finish pytest_fixture_setup --> <quart.testing.QuartClient object at 0x7f7805950220> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_substances>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/application/test_substance_resource.py::test_get_substances' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/application/test_substance_resource.py::test_get_substances' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/application/test_substance_resource.py::test_get_substances' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_get_substances>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_get_substances>
            pytest_assertrepr_compare [hook]
                config: <_pytest.config.Config object at 0x7f78089fd5b0>
                op: is
                left: <class 'NoneType'>
                right: <class 'list'>
            finish pytest_assertrepr_compare --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_substances>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError("assert <class 'NoneType'> is list\n +  where <class 'NoneType'> = type(None)") tblen=31>>
        finish pytest_runtest_makereport --> <TestReport 'tests/application/test_substance_resource.py::test_get_substances' when='call' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/application/test_substance_resource.py::test_get_substances' when='call' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/application/test_substance_resource.py::test_get_substances' when='call' outcome='failed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            node: <Function test_get_substances>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError("assert <class 'NoneType'> is list\n +  where <class 'NoneType'> = type(None)") tblen=1>>
            report: <TestReport 'tests/application/test_substance_resource.py::test_get_substances' when='call' outcome='failed'>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_get_substances>
            nextitem: <Function test_can_set_up_my_alembic>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='tests'>
              request: <SubRequest 'client' for <Function test_get_substances>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='tests'>
              request: <SubRequest 'client' for <Function test_get_substances>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests'>
              request: <SubRequest 'app' for <Function test_get_substances>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='tests'>
              request: <SubRequest 'client' for <Function test_get_substances>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests'>
              request: <SubRequest 'app' for <Function test_get_substances>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Function test_get_substances>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_substances>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/application/test_substance_resource.py::test_get_substances' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/application/test_substance_resource.py::test_get_substances' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/application/test_substance_resource.py::test_get_substances' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/application/test_substance_resource.py::test_get_substances
            location: ('tests/application/test_substance_resource.py', 29, 'test_get_substances')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_can_set_up_my_alembic>
          nextitem: <Function test_can_mix_multiple_substances_in_my_alembic>
        pytest_runtest_logstart [hook]
            nodeid: tests/domain/test_alembic.py::test_can_set_up_my_alembic
            location: ('tests/domain/test_alembic.py', 5, 'test_can_set_up_my_alembic')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_can_set_up_my_alembic>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_set_up_my_alembic>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_alembic.py::test_can_set_up_my_alembic' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_alembic.py::test_can_set_up_my_alembic' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_alembic.py::test_can_set_up_my_alembic' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_can_set_up_my_alembic>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_can_set_up_my_alembic>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_set_up_my_alembic>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_alembic.py::test_can_set_up_my_alembic' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_alembic.py::test_can_set_up_my_alembic' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_alembic.py::test_can_set_up_my_alembic' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_can_set_up_my_alembic>
            nextitem: <Function test_can_mix_multiple_substances_in_my_alembic>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_set_up_my_alembic>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_alembic.py::test_can_set_up_my_alembic' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_alembic.py::test_can_set_up_my_alembic' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_alembic.py::test_can_set_up_my_alembic' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/domain/test_alembic.py::test_can_set_up_my_alembic
            location: ('tests/domain/test_alembic.py', 5, 'test_can_set_up_my_alembic')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_can_mix_multiple_substances_in_my_alembic>
          nextitem: <Function test_cannot_mix_one_substance_in_my_alembic>
        pytest_runtest_logstart [hook]
            nodeid: tests/domain/test_alembic.py::test_can_mix_multiple_substances_in_my_alembic
            location: ('tests/domain/test_alembic.py', 8, 'test_can_mix_multiple_substances_in_my_alembic')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_can_mix_multiple_substances_in_my_alembic>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_mix_multiple_substances_in_my_alembic>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_alembic.py::test_can_mix_multiple_substances_in_my_alembic' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_alembic.py::test_can_mix_multiple_substances_in_my_alembic' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_alembic.py::test_can_mix_multiple_substances_in_my_alembic' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_can_mix_multiple_substances_in_my_alembic>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_can_mix_multiple_substances_in_my_alembic>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_mix_multiple_substances_in_my_alembic>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_alembic.py::test_can_mix_multiple_substances_in_my_alembic' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_alembic.py::test_can_mix_multiple_substances_in_my_alembic' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_alembic.py::test_can_mix_multiple_substances_in_my_alembic' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_can_mix_multiple_substances_in_my_alembic>
            nextitem: <Function test_cannot_mix_one_substance_in_my_alembic>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_mix_multiple_substances_in_my_alembic>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_alembic.py::test_can_mix_multiple_substances_in_my_alembic' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_alembic.py::test_can_mix_multiple_substances_in_my_alembic' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_alembic.py::test_can_mix_multiple_substances_in_my_alembic' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/domain/test_alembic.py::test_can_mix_multiple_substances_in_my_alembic
            location: ('tests/domain/test_alembic.py', 8, 'test_can_mix_multiple_substances_in_my_alembic')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_cannot_mix_one_substance_in_my_alembic>
          nextitem: <Function test_mixing_sulphur_salt_and_mercury_gives_gloop>
        pytest_runtest_logstart [hook]
            nodeid: tests/domain/test_alembic.py::test_cannot_mix_one_substance_in_my_alembic
            location: ('tests/domain/test_alembic.py', 16, 'test_cannot_mix_one_substance_in_my_alembic')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_cannot_mix_one_substance_in_my_alembic>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_cannot_mix_one_substance_in_my_alembic>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_alembic.py::test_cannot_mix_one_substance_in_my_alembic' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_alembic.py::test_cannot_mix_one_substance_in_my_alembic' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_alembic.py::test_cannot_mix_one_substance_in_my_alembic' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_cannot_mix_one_substance_in_my_alembic>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_cannot_mix_one_substance_in_my_alembic>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_cannot_mix_one_substance_in_my_alembic>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_alembic.py::test_cannot_mix_one_substance_in_my_alembic' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_alembic.py::test_cannot_mix_one_substance_in_my_alembic' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_alembic.py::test_cannot_mix_one_substance_in_my_alembic' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_cannot_mix_one_substance_in_my_alembic>
            nextitem: <Function test_mixing_sulphur_salt_and_mercury_gives_gloop>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_cannot_mix_one_substance_in_my_alembic>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_alembic.py::test_cannot_mix_one_substance_in_my_alembic' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_alembic.py::test_cannot_mix_one_substance_in_my_alembic' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_alembic.py::test_cannot_mix_one_substance_in_my_alembic' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/domain/test_alembic.py::test_cannot_mix_one_substance_in_my_alembic
            location: ('tests/domain/test_alembic.py', 16, 'test_cannot_mix_one_substance_in_my_alembic')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_mixing_sulphur_salt_and_mercury_gives_gloop>
          nextitem: <Function test_mixing_other_recipes_gives_sludge>
        pytest_runtest_logstart [hook]
            nodeid: tests/domain/test_alembic.py::test_mixing_sulphur_salt_and_mercury_gives_gloop
            location: ('tests/domain/test_alembic.py', 23, 'test_mixing_sulphur_salt_and_mercury_gives_gloop')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_mixing_sulphur_salt_and_mercury_gives_gloop>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_mixing_sulphur_salt_and_mercury_gives_gloop>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_alembic.py::test_mixing_sulphur_salt_and_mercury_gives_gloop' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_alembic.py::test_mixing_sulphur_salt_and_mercury_gives_gloop' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_alembic.py::test_mixing_sulphur_salt_and_mercury_gives_gloop' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_mixing_sulphur_salt_and_mercury_gives_gloop>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_mixing_sulphur_salt_and_mercury_gives_gloop>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_mixing_sulphur_salt_and_mercury_gives_gloop>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_alembic.py::test_mixing_sulphur_salt_and_mercury_gives_gloop' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_alembic.py::test_mixing_sulphur_salt_and_mercury_gives_gloop' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_alembic.py::test_mixing_sulphur_salt_and_mercury_gives_gloop' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_mixing_sulphur_salt_and_mercury_gives_gloop>
            nextitem: <Function test_mixing_other_recipes_gives_sludge>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_mixing_sulphur_salt_and_mercury_gives_gloop>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_alembic.py::test_mixing_sulphur_salt_and_mercury_gives_gloop' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_alembic.py::test_mixing_sulphur_salt_and_mercury_gives_gloop' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_alembic.py::test_mixing_sulphur_salt_and_mercury_gives_gloop' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/domain/test_alembic.py::test_mixing_sulphur_salt_and_mercury_gives_gloop
            location: ('tests/domain/test_alembic.py', 23, 'test_mixing_sulphur_salt_and_mercury_gives_gloop')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_mixing_other_recipes_gives_sludge>
          nextitem: <Function test_can_process_substance>
        pytest_runtest_logstart [hook]
            nodeid: tests/domain/test_alembic.py::test_mixing_other_recipes_gives_sludge
            location: ('tests/domain/test_alembic.py', 38, 'test_mixing_other_recipes_gives_sludge')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_mixing_other_recipes_gives_sludge>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_mixing_other_recipes_gives_sludge>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_alembic.py::test_mixing_other_recipes_gives_sludge' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_alembic.py::test_mixing_other_recipes_gives_sludge' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_alembic.py::test_mixing_other_recipes_gives_sludge' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_mixing_other_recipes_gives_sludge>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_mixing_other_recipes_gives_sludge>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_mixing_other_recipes_gives_sludge>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_alembic.py::test_mixing_other_recipes_gives_sludge' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_alembic.py::test_mixing_other_recipes_gives_sludge' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_alembic.py::test_mixing_other_recipes_gives_sludge' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_mixing_other_recipes_gives_sludge>
            nextitem: <Function test_can_process_substance>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_mixing_other_recipes_gives_sludge>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_alembic.py::test_mixing_other_recipes_gives_sludge' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_alembic.py::test_mixing_other_recipes_gives_sludge' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_alembic.py::test_mixing_other_recipes_gives_sludge' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/domain/test_alembic.py::test_mixing_other_recipes_gives_sludge
            location: ('tests/domain/test_alembic.py', 38, 'test_mixing_other_recipes_gives_sludge')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_can_process_substance>
          nextitem: <Function test_cannot_perform_unknown_process>
        pytest_runtest_logstart [hook]
            nodeid: tests/domain/test_alembic.py::test_can_process_substance
            location: ('tests/domain/test_alembic.py', 58, 'test_can_process_substance')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_can_process_substance>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_process_substance>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_alembic.py::test_can_process_substance' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_alembic.py::test_can_process_substance' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_alembic.py::test_can_process_substance' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_can_process_substance>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_can_process_substance>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_process_substance>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_alembic.py::test_can_process_substance' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_alembic.py::test_can_process_substance' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_alembic.py::test_can_process_substance' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_can_process_substance>
            nextitem: <Function test_cannot_perform_unknown_process>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_process_substance>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_alembic.py::test_can_process_substance' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_alembic.py::test_can_process_substance' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_alembic.py::test_can_process_substance' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/domain/test_alembic.py::test_can_process_substance
            location: ('tests/domain/test_alembic.py', 58, 'test_can_process_substance')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_cannot_perform_unknown_process>
          nextitem: <Function test_can_set_up_my_alembic_instruction_handler>
        pytest_runtest_logstart [hook]
            nodeid: tests/domain/test_alembic.py::test_cannot_perform_unknown_process
            location: ('tests/domain/test_alembic.py', 74, 'test_cannot_perform_unknown_process')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_cannot_perform_unknown_process>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_cannot_perform_unknown_process>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_alembic.py::test_cannot_perform_unknown_process' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_alembic.py::test_cannot_perform_unknown_process' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_alembic.py::test_cannot_perform_unknown_process' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_cannot_perform_unknown_process>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_cannot_perform_unknown_process>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_cannot_perform_unknown_process>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_alembic.py::test_cannot_perform_unknown_process' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_alembic.py::test_cannot_perform_unknown_process' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_alembic.py::test_cannot_perform_unknown_process' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_cannot_perform_unknown_process>
            nextitem: <Function test_can_set_up_my_alembic_instruction_handler>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_cannot_perform_unknown_process>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_alembic.py::test_cannot_perform_unknown_process' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_alembic.py::test_cannot_perform_unknown_process' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_alembic.py::test_cannot_perform_unknown_process' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/domain/test_alembic.py::test_cannot_perform_unknown_process
            location: ('tests/domain/test_alembic.py', 74, 'test_cannot_perform_unknown_process')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_can_set_up_my_alembic_instruction_handler>
          nextitem: <Function test_can_add_to_pantry[list]>
        pytest_runtest_logstart [hook]
            nodeid: tests/domain/test_alembic_instruction_handler.py::test_can_set_up_my_alembic_instruction_handler
            location: ('tests/domain/test_alembic_instruction_handler.py', 34, 'test_can_set_up_my_alembic_instruction_handler')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_can_set_up_my_alembic_instruction_handler>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='instruction' scope='function' baseid='tests/domain/test_alembic_instruction_handler.py'>
              request: <SubRequest 'instruction' for <Function test_can_set_up_my_alembic_instruction_handler>>
          finish pytest_fixture_setup --> AlembicInstruction(instruction_type='process', natures=['Sludge'], action='cook') [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='pantry' scope='function' baseid='tests/domain/test_alembic_instruction_handler.py'>
              request: <SubRequest 'pantry' for <Function test_can_set_up_my_alembic_instruction_handler>>
          finish pytest_fixture_setup --> <magnumopus.repositories.list_pantry.ListPantry object at 0x7f78048ef850> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_set_up_my_alembic_instruction_handler>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_alembic_instruction_handler.py::test_can_set_up_my_alembic_instruction_handler' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_alembic_instruction_handler.py::test_can_set_up_my_alembic_instruction_handler' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_alembic_instruction_handler.py::test_can_set_up_my_alembic_instruction_handler' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_can_set_up_my_alembic_instruction_handler>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_can_set_up_my_alembic_instruction_handler>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_set_up_my_alembic_instruction_handler>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_alembic_instruction_handler.py::test_can_set_up_my_alembic_instruction_handler' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_alembic_instruction_handler.py::test_can_set_up_my_alembic_instruction_handler' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_alembic_instruction_handler.py::test_can_set_up_my_alembic_instruction_handler' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_can_set_up_my_alembic_instruction_handler>
            nextitem: <Function test_can_add_to_pantry[list]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pantry' scope='function' baseid='tests/domain/test_alembic_instruction_handler.py'>
              request: <SubRequest 'pantry' for <Function test_can_set_up_my_alembic_instruction_handler>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='instruction' scope='function' baseid='tests/domain/test_alembic_instruction_handler.py'>
              request: <SubRequest 'instruction' for <Function test_can_set_up_my_alembic_instruction_handler>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_set_up_my_alembic_instruction_handler>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_alembic_instruction_handler.py::test_can_set_up_my_alembic_instruction_handler' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_alembic_instruction_handler.py::test_can_set_up_my_alembic_instruction_handler' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_alembic_instruction_handler.py::test_can_set_up_my_alembic_instruction_handler' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/domain/test_alembic_instruction_handler.py::test_can_set_up_my_alembic_instruction_handler
            location: ('tests/domain/test_alembic_instruction_handler.py', 34, 'test_can_set_up_my_alembic_instruction_handler')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_can_add_to_pantry[list]>
          nextitem: <Function test_can_retrieve_substance_from_pantry_by_nature[list]>
        pytest_runtest_logstart [hook]
            nodeid: tests/domain/test_pantry.py::test_can_add_to_pantry[list]
            location: ('tests/domain/test_pantry.py', 17, 'test_can_add_to_pantry[list]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_can_add_to_pantry[list]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='pantry_type' scope='function' baseid=''>
              request: <SubRequest 'pantry_type' for <Function test_can_add_to_pantry[list]>>
          finish pytest_fixture_setup --> list [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='list_pantry' scope='function' baseid='tests/domain/test_pantry.py'>
              request: <SubRequest 'list_pantry' for <Function test_can_add_to_pantry[list]>>
          finish pytest_fixture_setup --> <magnumopus.repositories.list_pantry.ListPantry object at 0x7f78048ef2b0> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='pantries' scope='function' baseid='tests/domain/test_pantry.py'>
              request: <SubRequest 'pantries' for <Function test_can_add_to_pantry[list]>>
          finish pytest_fixture_setup --> [hook]
              list: <magnumopus.repositories.list_pantry.ListPantry object at 0x7f78048ef2b0>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_add_to_pantry[list]>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_pantry.py::test_can_add_to_pantry[list]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_pantry.py::test_can_add_to_pantry[list]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_pantry.py::test_can_add_to_pantry[list]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_can_add_to_pantry[list]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_can_add_to_pantry[list]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_add_to_pantry[list]>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_pantry.py::test_can_add_to_pantry[list]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_pantry.py::test_can_add_to_pantry[list]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_pantry.py::test_can_add_to_pantry[list]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_can_add_to_pantry[list]>
            nextitem: <Function test_can_retrieve_substance_from_pantry_by_nature[list]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pantries' scope='function' baseid='tests/domain/test_pantry.py'>
              request: <SubRequest 'pantries' for <Function test_can_add_to_pantry[list]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pantries' scope='function' baseid='tests/domain/test_pantry.py'>
              request: <SubRequest 'pantries' for <Function test_can_add_to_pantry[list]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='list_pantry' scope='function' baseid='tests/domain/test_pantry.py'>
              request: <SubRequest 'list_pantry' for <Function test_can_add_to_pantry[list]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pantry_type' scope='function' baseid=''>
              request: <SubRequest 'pantry_type' for <Function test_can_add_to_pantry[list]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_add_to_pantry[list]>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_pantry.py::test_can_add_to_pantry[list]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_pantry.py::test_can_add_to_pantry[list]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_pantry.py::test_can_add_to_pantry[list]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/domain/test_pantry.py::test_can_add_to_pantry[list]
            location: ('tests/domain/test_pantry.py', 17, 'test_can_add_to_pantry[list]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_can_retrieve_substance_from_pantry_by_nature[list]>
          nextitem: <Function test_can_cook_substance>
        pytest_runtest_logstart [hook]
            nodeid: tests/domain/test_pantry.py::test_can_retrieve_substance_from_pantry_by_nature[list]
            location: ('tests/domain/test_pantry.py', 27, 'test_can_retrieve_substance_from_pantry_by_nature[list]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_can_retrieve_substance_from_pantry_by_nature[list]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='pantry_type' scope='function' baseid=''>
              request: <SubRequest 'pantry_type' for <Function test_can_retrieve_substance_from_pantry_by_nature[list]>>
          finish pytest_fixture_setup --> list [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='list_pantry' scope='function' baseid='tests/domain/test_pantry.py'>
              request: <SubRequest 'list_pantry' for <Function test_can_retrieve_substance_from_pantry_by_nature[list]>>
          finish pytest_fixture_setup --> <magnumopus.repositories.list_pantry.ListPantry object at 0x7f78048ef850> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='pantries' scope='function' baseid='tests/domain/test_pantry.py'>
              request: <SubRequest 'pantries' for <Function test_can_retrieve_substance_from_pantry_by_nature[list]>>
          finish pytest_fixture_setup --> [hook]
              list: <magnumopus.repositories.list_pantry.ListPantry object at 0x7f78048ef850>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_retrieve_substance_from_pantry_by_nature[list]>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_pantry.py::test_can_retrieve_substance_from_pantry_by_nature[list]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_pantry.py::test_can_retrieve_substance_from_pantry_by_nature[list]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_pantry.py::test_can_retrieve_substance_from_pantry_by_nature[list]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_can_retrieve_substance_from_pantry_by_nature[list]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_can_retrieve_substance_from_pantry_by_nature[list]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_retrieve_substance_from_pantry_by_nature[list]>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_pantry.py::test_can_retrieve_substance_from_pantry_by_nature[list]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_pantry.py::test_can_retrieve_substance_from_pantry_by_nature[list]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_pantry.py::test_can_retrieve_substance_from_pantry_by_nature[list]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_can_retrieve_substance_from_pantry_by_nature[list]>
            nextitem: <Function test_can_cook_substance>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pantries' scope='function' baseid='tests/domain/test_pantry.py'>
              request: <SubRequest 'pantries' for <Function test_can_retrieve_substance_from_pantry_by_nature[list]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pantries' scope='function' baseid='tests/domain/test_pantry.py'>
              request: <SubRequest 'pantries' for <Function test_can_retrieve_substance_from_pantry_by_nature[list]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='list_pantry' scope='function' baseid='tests/domain/test_pantry.py'>
              request: <SubRequest 'list_pantry' for <Function test_can_retrieve_substance_from_pantry_by_nature[list]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pantry_type' scope='function' baseid=''>
              request: <SubRequest 'pantry_type' for <Function test_can_retrieve_substance_from_pantry_by_nature[list]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_retrieve_substance_from_pantry_by_nature[list]>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_pantry.py::test_can_retrieve_substance_from_pantry_by_nature[list]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_pantry.py::test_can_retrieve_substance_from_pantry_by_nature[list]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_pantry.py::test_can_retrieve_substance_from_pantry_by_nature[list]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/domain/test_pantry.py::test_can_retrieve_substance_from_pantry_by_nature[list]
            location: ('tests/domain/test_pantry.py', 27, 'test_can_retrieve_substance_from_pantry_by_nature[list]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_can_cook_substance>
          nextitem: <Function test_can_wash_substance>
        pytest_runtest_logstart [hook]
            nodeid: tests/domain/test_substance.py::test_can_cook_substance
            location: ('tests/domain/test_substance.py', 2, 'test_can_cook_substance')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_can_cook_substance>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_cook_substance>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_substance.py::test_can_cook_substance' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_substance.py::test_can_cook_substance' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_substance.py::test_can_cook_substance' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_can_cook_substance>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_can_cook_substance>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_cook_substance>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_substance.py::test_can_cook_substance' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_substance.py::test_can_cook_substance' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_substance.py::test_can_cook_substance' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_can_cook_substance>
            nextitem: <Function test_can_wash_substance>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_cook_substance>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_substance.py::test_can_cook_substance' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_substance.py::test_can_cook_substance' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_substance.py::test_can_cook_substance' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/domain/test_substance.py::test_can_cook_substance
            location: ('tests/domain/test_substance.py', 2, 'test_can_cook_substance')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_can_wash_substance>
          nextitem: <Function test_can_pickle_substance>
        pytest_runtest_logstart [hook]
            nodeid: tests/domain/test_substance.py::test_can_wash_substance
            location: ('tests/domain/test_substance.py', 9, 'test_can_wash_substance')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_can_wash_substance>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_wash_substance>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_substance.py::test_can_wash_substance' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_substance.py::test_can_wash_substance' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_substance.py::test_can_wash_substance' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_can_wash_substance>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_can_wash_substance>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_wash_substance>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_substance.py::test_can_wash_substance' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_substance.py::test_can_wash_substance' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_substance.py::test_can_wash_substance' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_can_wash_substance>
            nextitem: <Function test_can_pickle_substance>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_wash_substance>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_substance.py::test_can_wash_substance' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_substance.py::test_can_wash_substance' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_substance.py::test_can_wash_substance' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/domain/test_substance.py::test_can_wash_substance
            location: ('tests/domain/test_substance.py', 9, 'test_can_wash_substance')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_can_pickle_substance>
          nextitem: <Function test_can_ferment_substance>
        pytest_runtest_logstart [hook]
            nodeid: tests/domain/test_substance.py::test_can_pickle_substance
            location: ('tests/domain/test_substance.py', 16, 'test_can_pickle_substance')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_can_pickle_substance>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_pickle_substance>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_substance.py::test_can_pickle_substance' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_substance.py::test_can_pickle_substance' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_substance.py::test_can_pickle_substance' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_can_pickle_substance>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_can_pickle_substance>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_pickle_substance>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_substance.py::test_can_pickle_substance' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_substance.py::test_can_pickle_substance' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_substance.py::test_can_pickle_substance' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_can_pickle_substance>
            nextitem: <Function test_can_ferment_substance>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_pickle_substance>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_substance.py::test_can_pickle_substance' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_substance.py::test_can_pickle_substance' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_substance.py::test_can_pickle_substance' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/domain/test_substance.py::test_can_pickle_substance
            location: ('tests/domain/test_substance.py', 16, 'test_can_pickle_substance')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_can_ferment_substance>
          nextitem: <Function test_can_cook_and_ferment_substance>
        pytest_runtest_logstart [hook]
            nodeid: tests/domain/test_substance.py::test_can_ferment_substance
            location: ('tests/domain/test_substance.py', 23, 'test_can_ferment_substance')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_can_ferment_substance>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_ferment_substance>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_substance.py::test_can_ferment_substance' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_substance.py::test_can_ferment_substance' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_substance.py::test_can_ferment_substance' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_can_ferment_substance>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_can_ferment_substance>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_ferment_substance>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_substance.py::test_can_ferment_substance' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_substance.py::test_can_ferment_substance' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_substance.py::test_can_ferment_substance' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_can_ferment_substance>
            nextitem: <Function test_can_cook_and_ferment_substance>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_ferment_substance>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_substance.py::test_can_ferment_substance' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_substance.py::test_can_ferment_substance' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_substance.py::test_can_ferment_substance' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/domain/test_substance.py::test_can_ferment_substance
            location: ('tests/domain/test_substance.py', 23, 'test_can_ferment_substance')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_can_cook_and_ferment_substance>
          nextitem: <Function test_the_order_of_processes_applied_to_a_substance_matters>
        pytest_runtest_logstart [hook]
            nodeid: tests/domain/test_substance.py::test_can_cook_and_ferment_substance
            location: ('tests/domain/test_substance.py', 30, 'test_can_cook_and_ferment_substance')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_can_cook_and_ferment_substance>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_cook_and_ferment_substance>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_substance.py::test_can_cook_and_ferment_substance' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_substance.py::test_can_cook_and_ferment_substance' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_substance.py::test_can_cook_and_ferment_substance' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_can_cook_and_ferment_substance>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_can_cook_and_ferment_substance>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_cook_and_ferment_substance>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_substance.py::test_can_cook_and_ferment_substance' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_substance.py::test_can_cook_and_ferment_substance' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_substance.py::test_can_cook_and_ferment_substance' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_can_cook_and_ferment_substance>
            nextitem: <Function test_the_order_of_processes_applied_to_a_substance_matters>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_can_cook_and_ferment_substance>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_substance.py::test_can_cook_and_ferment_substance' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_substance.py::test_can_cook_and_ferment_substance' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_substance.py::test_can_cook_and_ferment_substance' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/domain/test_substance.py::test_can_cook_and_ferment_substance
            location: ('tests/domain/test_substance.py', 30, 'test_can_cook_and_ferment_substance')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_the_order_of_processes_applied_to_a_substance_matters>
          nextitem: None
        pytest_runtest_logstart [hook]
            nodeid: tests/domain/test_substance.py::test_the_order_of_processes_applied_to_a_substance_matters
            location: ('tests/domain/test_substance.py', 38, 'test_the_order_of_processes_applied_to_a_substance_matters')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_the_order_of_processes_applied_to_a_substance_matters>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_the_order_of_processes_applied_to_a_substance_matters>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_substance.py::test_the_order_of_processes_applied_to_a_substance_matters' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_substance.py::test_the_order_of_processes_applied_to_a_substance_matters' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_substance.py::test_the_order_of_processes_applied_to_a_substance_matters' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_the_order_of_processes_applied_to_a_substance_matters>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_the_order_of_processes_applied_to_a_substance_matters>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_the_order_of_processes_applied_to_a_substance_matters>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_substance.py::test_the_order_of_processes_applied_to_a_substance_matters' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_substance.py::test_the_order_of_processes_applied_to_a_substance_matters' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_substance.py::test_the_order_of_processes_applied_to_a_substance_matters' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_the_order_of_processes_applied_to_a_substance_matters>
            nextitem: None
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_the_order_of_processes_applied_to_a_substance_matters>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/domain/test_substance.py::test_the_order_of_processes_applied_to_a_substance_matters' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/domain/test_substance.py::test_the_order_of_processes_applied_to_a_substance_matters' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/domain/test_substance.py::test_the_order_of_processes_applied_to_a_substance_matters' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f78089fd5b0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/domain/test_substance.py::test_the_order_of_processes_applied_to_a_substance_matters
            location: ('tests/domain/test_substance.py', 38, 'test_the_order_of_processes_applied_to_a_substance_matters')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session magnum_opus_ii exitstatus=<ExitCode.TESTS_FAILED: 1> testsfailed=3 testscollected=21>
        exitstatus: ExitCode.TESTS_FAILED
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x7f780666aee0>
          exitstatus: ExitCode.TESTS_FAILED
          config: <_pytest.config.Config object at 0x7f78089fd5b0>
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: wcwidth [assertion]
      early skip of rewriting module: wcwidth.wcwidth [assertion]
      early skip of rewriting module: wcwidth.table_wide [assertion]
      early skip of rewriting module: wcwidth.table_zero [assertion]
      early skip of rewriting module: wcwidth.unicode_versions [assertion]
        pytest_report_teststatus [hook]
            report: <TestReport 'tests/application/test_alembic_instruction_resource.py::test_create_alembic_mix_instruction' when='call' outcome='failed'>
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        pytest_report_teststatus [hook]
            report: <TestReport 'tests/application/test_alembic_instruction_resource.py::test_create_alembic_process_instruction' when='call' outcome='failed'>
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        pytest_report_teststatus [hook]
            report: <TestReport 'tests/application/test_substance_resource.py::test_get_substances' when='call' outcome='failed'>
            config: <_pytest.config.Config object at 0x7f78089fd5b0>
        finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x7f78089fd5b0>
    finish pytest_unconfigure --> [] [hook]
